#!/bin/sh

##########################################################################
#   Note: Use fetch-fastas.sh on the submit node to download input files
##########################################################################

#lpjs jobs 5
#lpjs processors-per-job 3
#lpjs threads-per-process all
#lpjs mem-per-proc 50MiB
#lpjs push-command rsync -av this host:there

# FreeBSD ports are installed under /usr/local
# pkgsrc packages in a non-privileged tree installed by auto-pkgsrc-setup
# are installed under ~/Pkgsrc/pkg by default
# pkgsrc packages in a privileged tree (installed by root) on Linux and NetBSD
# are found under /usr/pkg by default
# pkgsrc packages in a privileged tree (installed by root) on macOS
# are found under /opt/pkg by default (/usr is read-only on Macs)
# Prepend common pkgsrc bin directories if they exist
for prefix in $LPJS_HOME_DIR/Pkgsrc/pkg /usr/pkg /opt/pkg; do
    if [ -e $prefix ]; then
	PATH=$prefix/bin:$PATH
	export PATH
    fi
done

# Put some job info in the output
uname -a
hostname
pwd
which fastq-trim
fastq-trim --version
printenv

# Each job will trim one raw input file
infile=Results/01-fetch/Raw-renamed/WT-0$LPJS_ARRAY_INDEX.fastq.gz

# Marker file is created by "lpjs submit" so we can detect shared filesystems.
# If this file does not exist on the compute nodes, then the compute nodes
# must pull (download) the input files.
marker=lpjs-$LPJS_SUBMIT_HOST-shared-fs-marker
if [ ! -e $marker ]; then
    printf "$marker does not exist.  Using rsync to transfer files.\n"
    set -x
    printf "Fetching $LPJS_SUBMIT_HOST:$LPJS_WORKING_DIRECTORY/$infile\n"
    # Use --copy-links if a file on the submit node might be a symbolic
    # link pointing to something that it not also being pulled here
    rsync --copy-links ${LPJS_SUBMIT_HOST}:$LPJS_WORKING_DIRECTORY/$infile .
    set +x
else
    printf "$marker found.  No need to transfer files.\n"
fi

# Run the trim command
adapter=AGATCGGAAGAG
outfile=${infile%.fastq.gz}-trimmed.fastq.zst
set -x
time fastq-trim "$@" --3p-adapter1 $adapter $infile $outfile
set +x

# If we downloaded the input file, remove it now to avoid wasting time
# transferring it back.  By default, LPJS transfers the entire temporary
# working directory to the submit node using rsync.
if [ ! -e $marker ]; then
    rm -f $infile
fi
