#!/bin/sh -e

##########################################################################
#   Synopsis:
#       lpjs peak-mem log-dir
#       
#   Description:
#       .B lpjs peak-mem
#       parses the chaperone logs under the given log directory, extracting
#       the periodic peak memory reports, and outputs the highest.
#       This can be used to optimize the memory requirements of subsequent
#       runs, specified in the jobs script as
#
#       #lpjs pmem-per-proc
#
#       Note that for shared-memory multicore jobs (pthreads, OpenMP, etc),
#       the pmem-per-proc specification should use the
#       value reported, divided by the number of processors used
#       to determine the best value for pmem-per-proc.  The value of
#       pmem-per-proc should be set slightly higher than this dividend.
#       How much higher depends on how variable the memory use is.
#       For well-behaved programs, 10% should suffice.
#
#       Scripts that LPJS terminates for using more memory than they
#       allocated, and scripts that allocate far more memory than they
#       actually use (which may prevent other jobs from running, and is
#       thus is inconsiderate to other cluster/grid users),
#       are disabled by LPJS until pmem-per-proc is corrected to a
#       reasonable value.
#       
#   Arguments:
#       log-dir     The main log directory for the job submission
#       
#   Examples:
#       # lpjs peak-mem Logs/17-hisat2-align/
#       01-07 08:47:42 main(): Peak total job RSS = 5242804 KiB
#
#       # grep procs-per-job 17-hisat2-align.lpjs 
#       lpjs procs-per-job 4
#       lpjs min-procs-per-node procs-per-job
#
#       Using the Unix "bc" command to divide the above peak memory
#       by 4 processors, then divide by 1024 to convert from KiB to MiB,
#       and finally add 10%:
#
#       # bc
#       (5242804 / 4 / 1024) * 1.1
#       1407.97958984375000000000
#
#       #lpjs pmem-per-proc 1408MiB
#
#   See also:
#       lpjs create-script(1)
#       
#   History:
#   Date        Name        Modification
#   2025-01-07  Jason Bacon Begin
##########################################################################

usage()
{
    printf "Usage: $0 log-directory\n"
    printf "Example: $0 Logs/17-hisat2-align\n"
    exit 1
}


##########################################################################
#   Main
##########################################################################

if [ $# != 1 ]; then
    usage
fi
log_dir=$1

tail $log_dir/Job-*/chap* | fgrep 'Peak total' | sort -nk 9 | tail -n 1
