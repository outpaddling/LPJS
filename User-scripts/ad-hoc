#!/bin/sh

##########################################################################
#   Title:
#       lpjs-adhoc
#
#   Synopsis:
#       lpjs ad-hoc
#
#   Description:
#       This script provides a terminal-base menu system for starting
#       up an ad-hoc cluster or grid, i.e. one where the dispatch and
#       compute daemons are started and stopped manually, rather than
#       using system services.
#       
#   Arguments:
#       None
#       
#   Returns:
#       0 on success, non-zero error codes otherwise
#
#   See also:
#       lpjs-admin(1), lpjs-menu(1)
#       
#   History:
#   Date        Name        Modification
#   2021-10-06  J Bacon     Begin
##########################################################################

##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Function description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2024-03-22  Jason Bacon Begin
##########################################################################

start_daemon()
{
    if [ $# != 1 ] && [ $# != 2 ]; then
	printf "Usage: start_daemon command\n"
	return 1
    fi
    daemon=$1
    
    if [ $2 = background ]; then
	resp=2
    elif [ $2 = foreground ]; then
	resp=1
    else
	resp=''
	while [ 0"$resp" != 01 ] && [ 0"$resp" != 02 ]; do
	    cat << EOM
    
1.. Foreground (log messages on-screen and do not return to menu)
2.. Background (log messages to file and return to menu)

EOM
	    printf "Selection? "
	    read resp
	done
    fi
    
    if [ $resp = 1 ]; then
	printf "Type Ctrl+c in this window to terminate $daemon.\n"
	pause
	if [ $daemon = munged ]; then
	    $daemon --foreground
	else
	    $daemon
	fi
	pause
    else
	printf "Logged messages can be viewed using \"lpjs log\"\n"
	printf "or the \"View log(s)\" menu option.\n"
	if [ $daemon = munged ]; then
	    $daemon
	else
	    $daemon --daemonize
	fi
	echo $?
	pgrep -lf $daemon
	pause
    fi
}


##########################################################################
#   Function description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2024-05-29  ,,,         Begin
##########################################################################

stop_daemon()
{
    if [ $# != 1 ]; then
	printf "Usage: stop_daemon command\n"
	exit 1
    fi
    daemon=$1
    
    printf "Before pkill:\n"
    pgrep -lf $daemon
    pkill -f $daemon
    sleep 1
    printf "After pkill:\n"
    pgrep -lf $daemon
}


##########################################################################
#   Function description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2024-05-29  ,,,         Begin
##########################################################################

munge_start()
{
    cat << EOM

Note: Munge can only be started under the username by which it was installed.
If you are not that user, you will need to ask for assistance.

EOM
    printf "Continue? [y]/n "
    read continue
    if [ 0"$continue" != 0n ]; then
	key_file=$(auto-localbase)/etc/munge/munge.key
	while [ ! -e $key_file ]; do
	    cat << EOM

Missing key file $key_file.

1.. Create
2.. Copy from another host

EOM
	    printf "Selection? "
	    read selection
	    case 0"$selection" in
	    01)
		mungekey
		;;
	    02)
		printf "Copy munge.key to $(auto-localbase)/etc/munge.\n"
		pause
		;;
	    *)
		printf "Invalid selection.\n" >> /dev/stderr
		;;
	    esac
	done
	start_daemon munged $@
    fi
}


##########################################################################
#   Function description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2024-05-29  ,,,         Begin
##########################################################################

munge_stop()
{
    printf "Before stop:\n"
    pgrep -lf munged
    munged --stop
    printf "After stop:\n"
    sleep 1
    pgrep -lf munged
    pause
}


##########################################################################
#   Main
##########################################################################

if [ $# != 0 ]; then
    usage
fi

: ${EDITOR:=vi}

while true
do
    clear
    /usr/local/libexec/lpjs/banner
    cat << EOM

1.. Start munged (required by both dispatchd and compd)
2.. Start dispatchd (make this the head node)
3.. Start compd (make this a compute node)
4.. Start all daemons in the background (1-node instant cluster)
5.. Stop background munged
6.. Stop background dispatchd
7.. Stop background compd
8.. Stop all background daemons
9.. View log(s)
Q.. Quit

EOM

    read -p 'Selection? ' resp
    case 0$resp in
    01)
	munge_start
	;;
    
    02)
	start_daemon lpjs_dispatchd
	;;
    
    03)
	start_daemon lpjs_compd
	;;

    04)
	munge_start background
	start_daemon lpjs_dispatchd background
	start_daemon lpjs_compd background
	;;
    
    05)
	munge_stop
	;;
    
    06)
	stop_daemon lpjs_dispatchd
	pause
	;;
    
    07)
	stop_daemon lpjs_compd
	pause
	;;
    
    08)
	stop_daemon lpjs_compd
	stop_daemon lpjs_dispatchd
	munge_stop
	;;
    
    09)
	lpjs log
	pause
	;;

    0Q|0q)
	exit 0
	;;

    *)
	printf "Invalid option: $resp\n"
    esac
done
