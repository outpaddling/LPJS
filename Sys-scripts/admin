#!/bin/sh

##########################################################################
#   Title:
#       lpjs-admin
#
#   Section:
#       8
#
#   Synopsis:
#       lpjs admin
#       
#   Description:
#       lpjs admin presents a terminal-based menu for common lpjs
#       administration tasks, such as creating/modifying config files
#       and enabling/disabling services.
#       
#   Arguments:
#       None
#       
#   Returns:
#       0 upon success, non-zero error codes otherwise
#
#   See also:
#       lpjs-ad-hoc(1), lpjs-clear-queue(1), lpjs-compd-disable(1),
#       lpjs-compd-enable(1), lpjs-dispatchd-disable(1),
#       lpjs-dispatchd-enable(1), lpjs-log(1), lpjs-munge-enable(1),
#       lpjs-reset-queue(1), lpjs-restart(1), lpjs-start(1), lpjs-stop(1)
#       
#   History:
#   Date        Name        Modification
#   2021-10-06  J Bacon     Begin
##########################################################################

usage()
{
    printf "Usage: $0\n"
    exit 1
}


##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Main
##########################################################################

if [ $# != 0 ]; then
    usage
fi

# Prevent user from running a Trojan as root in the case their account
# was compromised
absolute="$(which $0)"
# Don't count on -e being set at this point
if ! auto-file-secure "$absolute"; then
    exit 1
fi

if ! auto-root-check $0; then
    printf "Root "
    # exec quotes '$absolute --flag', causing usage error
    # Assigning to cmd works around the problem
    cmd="$absolute $@"
    exec su -m root -c "$cmd"
fi

CONF_FILE=/usr/local/etc/lpjs/config
: ${EDITOR:=vi}

# FIXME: Verify that IP in /etc/hosts is correct
# FIXME: Can't edit /etc/hosts from non-privileged install
while ! host $(hostname) && ! fgrep -w $(hostname) /etc/hosts; do
    cat << EOM

Hostname "$(hostname)" does not resolve.  It must either be
known to your DNS servers or be listed in /etc/hosts.

EOM
    printf "Edit /etc/hosts now? [y]/n "
    read edit
    if [ 0"$edit" != 0n ]; then
	ifconfig
	ip=''
	while [ -z "$ip" ]; do
	    printf "IP address to add for this host? "
	    read ip
	done
	printf "$ip\t$(hostname)\t$(hostname -s)\n" >> /etc/hosts
	$EDITOR /etc/hosts
    else
	exit
    fi
done

while true
do
    clear
    /usr/local/libexec/lpjs/banner
    cat << EOM

1.. Set up a zero-configuration one-node cluster on this machine
2.. Generate a new config file
3.. Edit the config file
4.. Enable dispatch daemon (make this computer the head node)
5.. Enable compute daemon (make this computer an compute node)
6.. Disable dispatch daemon (make this computer no longer the head node)
7.. Disable compute daemon (make this computer no longer a compute node)
8.. Enable munge daemon only (access the cluster/grid without becoming a node)
9.. Disable munge daemon only (disable access to the cluster/grid)
10. Restart daemons
11. View logs
12. Node status
13. Job status
Q.. Quit

EOM

    printf 'Selection? '
    read resp
    case 0$resp in
    01)
	cat << EOM > $CONF_FILE
head    $(hostname)
compute $(hostname)
EOM
	chmod 644 $CONF_FILE
	chown lpjs:lpjs $CONF_FILE
	lpjs dispatchd-enable
	lpjs compd-enable --batch
	pause
	;;
    
    02)
	if [ -e $CONF_FILE ]; then
	    printf "Existing config file:\n\n"
	    cat $CONF_FILE
	    printf "\n$CONF_FILE already exists.  Overwrite? y/[n] "
	    read generate
	else
	    generate=y
	fi
	# FIXME: Preserve ownership
	if [ 0"$generate" = 0y ]; then
	    printf "Complete host name of the head node? "
	    read head_host
		cat << EOM > $CONF_FILE
head    $head_host
EOM
	    compute_host=' '
	    cat << EOM

Compute node hostnames need only be listed in the config file on the
head node.  If this is a head node, enter compute node names below,
one at a time.  Just press enter when done.

EOM
	    while [ -n "$compute_host" ]; do
		printf "Complete host name of a compute node? (Press enter when done) "
		read compute_host
		if [ -n "$compute_host" ]; then
		    cat << EOM >> $CONF_FILE
compute $compute_host
EOM
		fi
	    done
	    $EDITOR $CONF_FILE
	    chmod 644 $CONF_FILE
	    chown lpjs:lpjs $CONF_FILE
	fi
	;;
    
    03)
	printf "\nRunning \"$EDITOR $CONF_FILE\"...\n\n"
	pause
	$EDITOR $CONF_FILE
	;;

    04)
	printf '\nRunning "lpjs dispatchd-enable"...\n\n'
	/usr/local/libexec/lpjs/SMI/dispatchd-enable
	pause
	;;

    05)
	printf '\nRunning "lpjs compd-enable"...\n\n'
	/usr/local/libexec/lpjs/SMI/compd-enable
	pause
	;;

    06)
	printf '\nRunning "lpjs dispatchd-disable"...\n\n'
	/usr/local/libexec/lpjs/SMI/dispatchd-disable
	pause
	;;
    
    07)
	printf '\nRunning "lpjs compd-disable"...\n\n'
	/usr/local/libexec/lpjs/SMI/compd-disable
	pause
	;;
    
    08)
	printf '\nRunning "lpjs munge-enable"...\n\n'
	lpjs munge-enable
	pause
	;;
    
    09)
	printf '\nRunning "lpjs munge-disable"...\n\n'
	lpjs munge-disable
	pause
	;;
	
    010)
	printf '\nRunning "lpjs restart"...\n\n'
	lpjs restart
	pause
	;;
    
    011)
	printf '\nRunning "lpjs log"...\n\n'
	lpjs log | more
	pause
	;;
    
    012)
	printf '\nRunning "lpjs nodes"...\n\n'
	pause
	lpjs nodes
	pause
	;;
    
    013)
	printf '\nRunning "lpjs jobs"...\n\n'
	pause
	lpjs jobs
	pause
	;;
    
    0Q|0q)
	exit 0
	;;

    *)
	printf "Invalid option: $resp\n"
    esac
done
