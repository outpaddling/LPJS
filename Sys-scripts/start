#!/bin/sh -e

##########################################################################
#   Title:
#       lpjs-start
#
#   Section:
#       8
#
#   Synopsis:
#       lpjs start
#       
#   Description:
#       lpjs starts lpjs_compd and lpjs_dispatchd, if they are enabled
#       as system services.  To start and stop these daemons manually,
#       see lpjs-ad-hoc(8).
#
#       Methods for starting system services differ greatly depending
#       on the operating system.  lpjs start frees the user from these
#       differences and from typing in complex commands in some cases.
#       
#   Arguments:
#       None
#       
#   Returns:
#       0 upon success, non-zero error codes otherwise
#
#   See also:
#       lpjs-admin(8), lpjs-restart(8), lpjs-stop(8),
#       lpjs-compd-enable(8), lpjs-dispatchd-enable(8),
#       
#   History:
#   Date        Name        Modification
#   2024-05     Jason Bacon Begin
##########################################################################

usage()
{
    printf "Usage: $0\n"
    exit 1
}


##########################################################################
#   Main
##########################################################################

if [ $# != 0 ]; then
    usage
fi

# Prevent user from running a Trojan as root in the case their account
# was compromised
absolute="$(which $0)"
# Don't count on -e being set at this point
if ! auto-file-secure "$absolute"; then
    exit 1
fi

if ! auto-root-check $0; then
    printf "Root "
    # exec quotes '$absolute --flag', causing usage error
    # Assigning to cmd works around the problem
    cmd="$absolute $@"
    exec su -m root -c "$cmd"
fi

if [ $(uname) = Darwin ]; then
    printf "Restarting munge...\n"
    launchctl bootout system /Library/LaunchDaemons/org.pkgsrc.munge.plist
    launchctl bootstrap system /Library/LaunchDaemons/org.pkgsrc.munge.plist
    
    if [ -e /Library/LaunchDaemons/org.pkgsrc.lpjs_dispatchd.plist ]; then
	printf "Starting lpjs_dispatchd...\n"
	launchctl bootstrap system /Library/LaunchDaemons/org.pkgsrc.lpjs_dispatchd.plist
    fi

    if [ -e /Library/LaunchDaemons/org.pkgsrc.lpjs_compd.plist ]; then
	printf "Starting lpjs_compd...\n"
	launchctl bootstrap system /Library/LaunchDaemons/org.pkgsrc.lpjs_compd.plist
    fi

elif [ $(uname) = DragonFly ] || [ $(uname) = FreeBSD ]; then
    printf "Restarting munge...\n"
    service munged restart
    if grep -E '^lpjs_dispatchd_enable=\"?[Yy][Ee][Ss]"?' /etc/rc.conf; then
	printf "Starting lpjs_dispatchd...\n"
	service lpjs_dispatchd start
    fi
    
    if grep -E '^lpjs_compd_enable=\"?[Yy][Ee][Ss]"?' /etc/rc.conf; then
	printf "Starting lpjs_compd...\n"
	service lpjs_compd start
    fi

elif [ $(uname) = Linux ]; then
    if which systemctl; then
	printf "Reloading daemons...\n"
	systemctl daemon-reload
	# Hack: Start below doesn't work immediately after reload
	# Does systemctl exit before it's actually finished??
	printf "Restarting munge...\n"
	systemctl restart munge
	sleep 2
	
	if [ -e /etc/systemd/system/lpjs_dispatchd.service ]; then
	    printf "Starting lpjs_dispatchd...\n"
	    systemctl start lpjs_dispatchd
	fi
	
	if [ -e /etc/systemd/system/lpjs_compd.service ]; then
	    printf "Restarting lpjs_compd...\n"
	    systemctl start lpjs_compd
	fi
    else
	printf "$0: Only systemd is currently supported.\n" >> /dev/stderr
	printf "Please consider adding support for other Linux init systems.\n"
	exit 1
    fi
    
elif [ $(uname) = NetBSD ]; then
    printf "Restarting munge...\n"
    service munge restart
    if grep -E '^lpjs_dispatchd=\"?[Yy][Ee][Ss]"?' /etc/rc.conf; then
	printf "Restarting lpjs_dispatchd...\n"
	service lpjs_dispatchd start
    fi
    
    if grep -E '^lpjs_compd=\"?[Yy][Ee][Ss]"?' /etc/rc.conf; then
	printf "Restarting lpjs_compd...\n"
	service lpjs_compd start
    fi

elif [ $(uname) = SunOS ]; then
    # FIXME: Create init scripts for this
    auto-unsupported-os $0

else
    auto-unsupported-os $0
fi
