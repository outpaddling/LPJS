.TH lpjs-submit 1
.SH NAME    \" Section header
.PP

lpjs submit \- Submit a job script

\" Convention:
\" Underline anything that is typed verbatim - commands, etc.
.SH SYNOPSIS
.PP
.nf 
.na 
lpjs submit script.lpjs
.ad
.fi

\" Optional sections
.SH "DESCRIPTION"

This is a brief reference for lpjs-submit(1).  See the Research Computing
User's Guide at https://acadix.biz/publications.php for a more complete
tutorial on using LPJS.

.B "lpjs submit"
submits a new job to the LPJS queue.

A job script is an ordinary script, which can be written in any
interpreted language that uses '#' to denote a comment.

Script can be generated using lpjs-create-script(1), which is also a
menu item in lpjs-menu(1).

LPJS job parameters are embedded in the script as comments beginning
with '#lpjs'.

When the scheduler dispatches a job to a compute node, lpjs_compd(8)
starts a chaperone process, which then runs and monitors your batch script.
Output from the chaperone and the script are saved on the submit node.

.SH REQUIRED JOB PARAMETERS

There are four parameters required for every LPJS batch script:

.TP
\fBjobs\fR
The number of jobs to queue.  The script will be run this many times,
with as many as possible running simultaneously.

.TP
\fBprocessors-per-job\fR
The number of processors to allocate for each job.  This is 1 for
serial programs and >1 where each job runs a parallel program.

.TP
\fBthreads-per-process\fR
The number of processors that must be on the same node.  For shared
memory parallel programs, such as OpenMP and pthreads, this must equal
processors-per-job.  It can be specified as "processors-per-job", rather than
a hard-coded number, so that you need not keep the two in sync with
future changes.

.TP
\fBpmem-per-processor\fR
The amount of physical memory to allocate per processor.  Must be
followed by MiB, MB, GiB, or GB.

.SH OPTIONAL JOB PARAMETERS

.TP
\fBpull-command\fR
Command used by chaperone(8) to transfer files to the temporary
working directory before the job begins. Files normally are pulled
from the submit node, but the command can be any valid Unix file
transfer command.  The following special symbols within the command
are replaced by the data shown:

.nf
.na
%w      Full path of the working directory on the compute node
%h      Name of the submit host
%s      Full path of the submit directory on the submit host
%[#]i   Job array index, optionally zero-left-padded to # digits
.ad
.fi

Example:

.nf
.na
#lpjs pull-command rsync --mkpath %h:%s/Raw/\*-sample%2i-* Raw
.ad
.fi


\fBpush-command\fR
Command used by chaperone(8) to transfer files from the temporary working
directory after the job completes.  Files normally are pushed to
the submit node, but the command can be any valid Unix file
transfer command.  The following special symbols within the command
are replaced by the data shown:

.nf
.na
%w      Full path of the working directory on the compute node
%h      Name of the submit host
%s      Full path of the submit directory on the submit host
%[#]i   Job array index, optionally zero-left-padded to # digits
.ad
.fi

Example:

.nf
.na
#lpjs push-command rsync --mkpath Results/\*-sample%2i-* %h:%s/Raw/
.ad
.fi

.TP
\fBlog-dir\fR
The parent directory for storing job logs (standard output and
standard error from the script and chaperone) on the submit node.
The default is LPJS-logs/script-name.

.TP
\fBpath\fR
The value of PATH to use when running the script.  This is set before
the job starts, so that it impacts pull-command as well.  Some systems
such as macOS and RHEL ship with older versions of rsync.  Setting PATH
may be necessary to use a newer rsync installed via a 3rd party package
manager such as pkgsrc, which supports options like --mkpath.

.SH PORTABILITY

Since LPJS is a portable scheduler, and cluster/grids may include
multiple operating systems, care must be taken to write scripts in
a portable way.  We generally recommend using POSIX Bourne shell,
which is supported by all Unix-like platforms.  If using other
languages, which as bash(1), perl(1), or python(1), the shebang line,
which indicates the language used by the script, must be done in
a portable manner.  Only Bourne shell (sh) is included with all Unix-like
systems.  Any other scripting language is an add-on, and may be installed
in different locations on different platforms.  We can work around this
using "#!/usr/bin/env".

.nf
.na
# These are not portable, since they use platform-specific paths
#!/bin/bash
#!/usr/bin/perl
#!/usr/bin/python

# These are portable, since /usr/bin/env is consistent across platforms
#!/usr/bin/env bash
#!/usr/bin/env perl
#!/usr/bin/env python

# This is portable, since Bourne shell is included with every platform
#!/bin/sh -e
.ad
.fi

.SH ENVIRONMENT

LPJS sets the following environment variables for use by batch scripts:

.TP
\fBLPJS_JOB_ID\fR
The job ID of the job under which the process is running.
.TP
\fBLPJS_ARRAY_INDEX\fR
The 1-base array index of each job in a job array submission.
For readability and flexibility, use this as the basis for a
"sample" variable:

.nf
.na
# Input files are sample-1.txt, sample-2.txt, ...
sample=$LPJS_ARRAY_INDEX
input_file=input-$sample.txt
.ad
.fi

.TP
\fBLPJS_JOB_COUNT\fR
The number of jobs in the job array submission.
.TP
\fBLPJS_PROCESSORS_PER_JOB\fR
The value set in the script by "#lpjs processors-per-job".
.TP
\fBLPJS_CMD_SEARCH_PATH\fR
The optional value set in the script by "#lpjs path".  May be necessary
to locate tools used in "#lpjs pull-command" and "#lpjs push-command".
Also useful for commands with the script, although the script itself
can also set PATH for that purpose.
.TP
\fBLPJS_THREADS_PER_PROCESS\fR
The value set in the script by "#lpjs threads-per-process".
.TP
\fBLPJS_PHYS_MIB_PER_PROCESSOR\fR
The value set in the script by "#lpjs pmem-per-proc", expressed
in mebibytes, regardless of the units used in pmem-per-proc.
.TP
\fBLPJS_USER_NAME\fR
The username of the user running the job.
.TP
\fBLPJS_PRIMARY_GROUP_NAME\fR
The primary group name of the user running the job.
.TP
\fBLPJS_SUBMIT_HOST\fR
The FQDN (fully qualified domain name / host name) from which the job
was submitted.
.TP
\fBLPJS_SUBMIT_DIRECTORY\fR
The absolute pathname of the directory on the submit node, from which
the job was submitted.
.TP
\fBLPJS_SCRIPT_NAME\fR
The filename of the batch script being run by the job.
.TP
\fBLPJS_COMPUTE_NODE\fR
The compute node running the job (same as $(hostname) or `hostname`).
.TP
\fBLPJS_JOB_LOG_DIR\fR
The path of the directory containing job terminal output, relative
to LPJS_SUBMIT_DIRECTORY.  Defaults to LPJS-logs/script-name.
.TP
\fBPATH\fR
Either the user's default PATH or the PATH provided by
"$lpjs path", 
prepended with LOCALBASE/bin and PREFIX/bin, as these may be different
on different compute nodes.  Where LPJS was installed via a package
manager, this provides access to all other software installed by
the same package manager with no additional effort from the user.
E.g., pkgsrc installs by default under /usr/pkg on most systems, but
under /opt/pkg on macOS, since /usr is read-only.
.TP
\fBLPJS_PULL_COMMAND\fR
The command set by "#lpjs pull-command" for pulling files to the
compute node before the script begins.
.TP
\fBLPJS_PUSH_COMMAND\fR
The command set by "#lpjs push-command" for pushing files from the
compute node after the script ends.
.TP
\fBLPJS_HOME_DIR\fR
Home directory of $LPJS_USER_NAME on the compute node.  This may differ
depending on the operating system and local configuration, e.g.
macOS uses "/Users/username", while many other systems use
"/home/username" by default.  Not all shells support "~/" to
represent the home directory, so LPJS_HOME_DIR offers a 100% portable
way to represent it.

.SH EXAMPLE PRINTENV OUTPUT

.nf
.na
LPJS_PROCESSORS_PER_JOB=1
LPJS_CMD_SEARCH_PATH=not-set
LPJS_JOB_COUNT=1
LPJS_COMPUTE_NODE=compute-001.acadix.biz
LPJS_PUSH_COMMAND=not-set
LPJS_PHYS_MIB_PER_PROCESSOR=100
LPJS_PRIMARY_GROUP_NAME=bacon
LPJS_SUBMIT_HOST=moray.acadix.biz
LPJS_JOB_LOG_DIR=LPJS-logs/env
LPJS_USER_NAME=bacon
LPJS_SUBMIT_DIRECTORY=/home/bacon/Prog/Src/lpjs/Test
LPJS_PULL_COMMAND=not-set
LPJS_JOB_ID=161
LPJS_SCRIPT_NAME=env.lpjs
LPJS_THREADS_PER_PROCESS=1
LPJS_ARRAY_INDEX=1
LPJS_HOME_DIR=/home/bacon
.ad
.fi

.SH EXAMPLES

.nf
.na
lpjs submit fastq-trim.lpjs
.ad
.fi

.SH FILES
.nf
.na
%%PREFIX%%/etc/lpjs/config
.ad
.fi

.SH "SEE ALSO"
lpjs-jobs(1), lpjs-cancel(1), lpjs-nodes(1)

.SH AUTHOR
.nf
.na
J. Bacon
